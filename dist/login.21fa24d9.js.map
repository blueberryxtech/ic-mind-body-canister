{"mappings":"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","sources":["node_modules/@parcel/runtime-browser-hmr/lib/runtime-0727357dbc792eb8.js","node_modules/@dfinity/auth-client/lib/esm/index.js","node_modules/@dfinity/auth-client/src/index.ts","node_modules/@dfinity/identity/lib/esm/index.js","node_modules/@dfinity/identity/src/index.ts","node_modules/@dfinity/identity/lib/esm/identity/ed25519.js","node_modules/@dfinity/identity/src/identity/ed25519.ts","node_modules/@dfinity/identity/lib/esm/identity/ecdsa.js","node_modules/@dfinity/identity/src/identity/ecdsa.ts","node_modules/@dfinity/identity/lib/esm/identity/delegation.js","node_modules/@dfinity/identity/src/identity/delegation.ts","node_modules/@dfinity/identity/lib/esm/identity/webauthn.js","node_modules/@dfinity/identity/src/identity/webauthn.ts","node_modules/@dfinity/auth-client/lib/esm/idleManager.js","node_modules/@dfinity/auth-client/src/idleManager.ts","node_modules/@dfinity/auth-client/lib/esm/storage.js","node_modules/@dfinity/auth-client/src/storage.ts","node_modules/@dfinity/auth-client/lib/esm/db.js","node_modules/@dfinity/auth-client/src/db.ts","node_modules/idb/build/index.js","node_modules/idb/build/wrap-idb-value.js"],"sourcesContent":["var HMR_HOST = null;var HMR_PORT = null;var HMR_SECURE = false;var HMR_ENV_HASH = \"d6ea1d42532a7575\";module.bundle.HMR_BUNDLE_ID = \"6afa515121fa24d9\";\"use strict\";\n\n/* global HMR_HOST, HMR_PORT, HMR_ENV_HASH, HMR_SECURE, chrome, browser, __parcel__import__, __parcel__importScripts__, ServiceWorkerGlobalScope */\n/*::\nimport type {\n  HMRAsset,\n  HMRMessage,\n} from '@parcel/reporter-dev-server/src/HMRServer.js';\ninterface ParcelRequire {\n  (string): mixed;\n  cache: {|[string]: ParcelModule|};\n  hotData: {|[string]: mixed|};\n  Module: any;\n  parent: ?ParcelRequire;\n  isParcelRequire: true;\n  modules: {|[string]: [Function, {|[string]: string|}]|};\n  HMR_BUNDLE_ID: string;\n  root: ParcelRequire;\n}\ninterface ParcelModule {\n  hot: {|\n    data: mixed,\n    accept(cb: (Function) => void): void,\n    dispose(cb: (mixed) => void): void,\n    // accept(deps: Array<string> | string, cb: (Function) => void): void,\n    // decline(): void,\n    _acceptCallbacks: Array<(Function) => void>,\n    _disposeCallbacks: Array<(mixed) => void>,\n  |};\n}\ninterface ExtensionContext {\n  runtime: {|\n    reload(): void,\n    getURL(url: string): string;\n    getManifest(): {manifest_version: number, ...};\n  |};\n}\ndeclare var module: {bundle: ParcelRequire, ...};\ndeclare var HMR_HOST: string;\ndeclare var HMR_PORT: string;\ndeclare var HMR_ENV_HASH: string;\ndeclare var HMR_SECURE: boolean;\ndeclare var chrome: ExtensionContext;\ndeclare var browser: ExtensionContext;\ndeclare var __parcel__import__: (string) => Promise<void>;\ndeclare var __parcel__importScripts__: (string) => Promise<void>;\ndeclare var globalThis: typeof self;\ndeclare var ServiceWorkerGlobalScope: Object;\n*/\nvar OVERLAY_ID = '__parcel__error__overlay__';\nvar OldModule = module.bundle.Module;\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData[moduleName],\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n  module.bundle.hotData[moduleName] = undefined;\n}\nmodule.bundle.Module = Module;\nmodule.bundle.hotData = {};\nvar checkedAssets /*: {|[string]: boolean|} */, assetsToDispose /*: Array<[ParcelRequire, string]> */, assetsToAccept /*: Array<[ParcelRequire, string]> */;\n\nfunction getHostname() {\n  return HMR_HOST || (location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');\n}\nfunction getPort() {\n  return HMR_PORT || location.port;\n}\n\n// eslint-disable-next-line no-redeclare\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = getHostname();\n  var port = getPort();\n  var protocol = HMR_SECURE || location.protocol == 'https:' && !/localhost|127.0.0.1|0.0.0.0/.test(hostname) ? 'wss' : 'ws';\n  var ws;\n  try {\n    ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/');\n  } catch (err) {\n    if (err.message) {\n      console.error(err.message);\n    }\n    ws = {};\n  }\n\n  // Web extension context\n  var extCtx = typeof browser === 'undefined' ? typeof chrome === 'undefined' ? null : chrome : browser;\n\n  // Safari doesn't support sourceURL in error stacks.\n  // eval may also be disabled via CSP, so do a quick check.\n  var supportsSourceURL = false;\n  try {\n    (0, eval)('throw new Error(\"test\"); //# sourceURL=test.js');\n  } catch (err) {\n    supportsSourceURL = err.stack.includes('test.js');\n  }\n\n  // $FlowFixMe\n  ws.onmessage = async function (event /*: {data: string, ...} */) {\n    checkedAssets = {} /*: {|[string]: boolean|} */;\n    assetsToAccept = [];\n    assetsToDispose = [];\n    var data /*: HMRMessage */ = JSON.parse(event.data);\n    if (data.type === 'update') {\n      // Remove error overlay if there is one\n      if (typeof document !== 'undefined') {\n        removeErrorOverlay();\n      }\n      let assets = data.assets.filter(asset => asset.envHash === HMR_ENV_HASH);\n\n      // Handle HMR Update\n      let handled = assets.every(asset => {\n        return asset.type === 'css' || asset.type === 'js' && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);\n      });\n      if (handled) {\n        console.clear();\n\n        // Dispatch custom event so other runtimes (e.g React Refresh) are aware.\n        if (typeof window !== 'undefined' && typeof CustomEvent !== 'undefined') {\n          window.dispatchEvent(new CustomEvent('parcelhmraccept'));\n        }\n        await hmrApplyUpdates(assets);\n\n        // Dispose all old assets.\n        let processedAssets = {} /*: {|[string]: boolean|} */;\n        for (let i = 0; i < assetsToDispose.length; i++) {\n          let id = assetsToDispose[i][1];\n          if (!processedAssets[id]) {\n            hmrDispose(assetsToDispose[i][0], id);\n            processedAssets[id] = true;\n          }\n        }\n\n        // Run accept callbacks. This will also re-execute other disposed assets in topological order.\n        processedAssets = {};\n        for (let i = 0; i < assetsToAccept.length; i++) {\n          let id = assetsToAccept[i][1];\n          if (!processedAssets[id]) {\n            hmrAccept(assetsToAccept[i][0], id);\n            processedAssets[id] = true;\n          }\n        }\n      } else fullReload();\n    }\n    if (data.type === 'error') {\n      // Log parcel errors to console\n      for (let ansiDiagnostic of data.diagnostics.ansi) {\n        let stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;\n        console.error('🚨 [parcel]: ' + ansiDiagnostic.message + '\\n' + stack + '\\n\\n' + ansiDiagnostic.hints.join('\\n'));\n      }\n      if (typeof document !== 'undefined') {\n        // Render the fancy html overlay\n        removeErrorOverlay();\n        var overlay = createErrorOverlay(data.diagnostics.html);\n        // $FlowFixMe\n        document.body.appendChild(overlay);\n      }\n    }\n  };\n  ws.onerror = function (e) {\n    if (e.message) {\n      console.error(e.message);\n    }\n  };\n  ws.onclose = function () {\n    console.warn('[parcel] 🚨 Connection to the HMR server was lost');\n  };\n}\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n    console.log('[parcel] ✨ Error resolved');\n  }\n}\nfunction createErrorOverlay(diagnostics) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n  let errorHTML = '<div style=\"background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;\">';\n  for (let diagnostic of diagnostics) {\n    let stack = diagnostic.frames.length ? diagnostic.frames.reduce((p, frame) => {\n      return `${p}\n<a href=\"/__parcel_launch_editor?file=${encodeURIComponent(frame.location)}\" style=\"text-decoration: underline; color: #888\" onclick=\"fetch(this.href); return false\">${frame.location}</a>\n${frame.code}`;\n    }, '') : diagnostic.stack;\n    errorHTML += `\n      <div>\n        <div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">\n          🚨 ${diagnostic.message}\n        </div>\n        <pre>${stack}</pre>\n        <div>\n          ${diagnostic.hints.map(hint => '<div>💡 ' + hint + '</div>').join('')}\n        </div>\n        ${diagnostic.documentation ? `<div>📝 <a style=\"color: violet\" href=\"${diagnostic.documentation}\" target=\"_blank\">Learn more</a></div>` : ''}\n      </div>\n    `;\n  }\n  errorHTML += '</div>';\n  overlay.innerHTML = errorHTML;\n  return overlay;\n}\nfunction fullReload() {\n  if ('reload' in location) {\n    location.reload();\n  } else if (extCtx && extCtx.runtime && extCtx.runtime.reload) {\n    extCtx.runtime.reload();\n  }\n}\nfunction getParents(bundle, id) /*: Array<[ParcelRequire, string]> */{\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n  var parents = [];\n  var k, d, dep;\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {\n        parents.push([bundle, k]);\n      }\n    }\n  }\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n  return parents;\n}\nfunction updateLink(link) {\n  var href = link.getAttribute('href');\n  if (!href) {\n    return;\n  }\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    if (link.parentNode !== null) {\n      // $FlowFixMe\n      link.parentNode.removeChild(link);\n    }\n  };\n  newLink.setAttribute('href',\n  // $FlowFixMe\n  href.split('?')[0] + '?' + Date.now());\n  // $FlowFixMe\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      // $FlowFixMe[incompatible-type]\n      var href /*: string */ = links[i].getAttribute('href');\n      var hostname = getHostname();\n      var servedFromHMRServer = hostname === 'localhost' ? new RegExp('^(https?:\\\\/\\\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort()).test(href) : href.indexOf(hostname + ':' + getPort());\n      var absolute = /^https?:\\/\\//i.test(href) && href.indexOf(location.origin) !== 0 && !servedFromHMRServer;\n      if (!absolute) {\n        updateLink(links[i]);\n      }\n    }\n    cssTimeout = null;\n  }, 50);\n}\nfunction hmrDownload(asset) {\n  if (asset.type === 'js') {\n    if (typeof document !== 'undefined') {\n      let script = document.createElement('script');\n      script.src = asset.url + '?t=' + Date.now();\n      if (asset.outputFormat === 'esmodule') {\n        script.type = 'module';\n      }\n      return new Promise((resolve, reject) => {\n        var _document$head;\n        script.onload = () => resolve(script);\n        script.onerror = reject;\n        (_document$head = document.head) === null || _document$head === void 0 || _document$head.appendChild(script);\n      });\n    } else if (typeof importScripts === 'function') {\n      // Worker scripts\n      if (asset.outputFormat === 'esmodule') {\n        return __parcel__import__(asset.url + '?t=' + Date.now());\n      } else {\n        return new Promise((resolve, reject) => {\n          try {\n            __parcel__importScripts__(asset.url + '?t=' + Date.now());\n            resolve();\n          } catch (err) {\n            reject(err);\n          }\n        });\n      }\n    }\n  }\n}\nasync function hmrApplyUpdates(assets) {\n  global.parcelHotUpdate = Object.create(null);\n  let scriptsToRemove;\n  try {\n    // If sourceURL comments aren't supported in eval, we need to load\n    // the update from the dev server over HTTP so that stack traces\n    // are correct in errors/logs. This is much slower than eval, so\n    // we only do it if needed (currently just Safari).\n    // https://bugs.webkit.org/show_bug.cgi?id=137297\n    // This path is also taken if a CSP disallows eval.\n    if (!supportsSourceURL) {\n      let promises = assets.map(asset => {\n        var _hmrDownload;\n        return (_hmrDownload = hmrDownload(asset)) === null || _hmrDownload === void 0 ? void 0 : _hmrDownload.catch(err => {\n          // Web extension fix\n          if (extCtx && extCtx.runtime && extCtx.runtime.getManifest().manifest_version == 3 && typeof ServiceWorkerGlobalScope != 'undefined' && global instanceof ServiceWorkerGlobalScope) {\n            extCtx.runtime.reload();\n            return;\n          }\n          throw err;\n        });\n      });\n      scriptsToRemove = await Promise.all(promises);\n    }\n    assets.forEach(function (asset) {\n      hmrApply(module.bundle.root, asset);\n    });\n  } finally {\n    delete global.parcelHotUpdate;\n    if (scriptsToRemove) {\n      scriptsToRemove.forEach(script => {\n        if (script) {\n          var _document$head2;\n          (_document$head2 = document.head) === null || _document$head2 === void 0 || _document$head2.removeChild(script);\n        }\n      });\n    }\n  }\n}\nfunction hmrApply(bundle /*: ParcelRequire */, asset /*:  HMRAsset */) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (asset.type === 'css') {\n    reloadCSS();\n  } else if (asset.type === 'js') {\n    let deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];\n    if (deps) {\n      if (modules[asset.id]) {\n        // Remove dependencies that are removed and will become orphaned.\n        // This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.\n        let oldDeps = modules[asset.id][1];\n        for (let dep in oldDeps) {\n          if (!deps[dep] || deps[dep] !== oldDeps[dep]) {\n            let id = oldDeps[dep];\n            let parents = getParents(module.bundle.root, id);\n            if (parents.length === 1) {\n              hmrDelete(module.bundle.root, id);\n            }\n          }\n        }\n      }\n      if (supportsSourceURL) {\n        // Global eval. We would use `new Function` here but browser\n        // support for source maps is better with eval.\n        (0, eval)(asset.output);\n      }\n\n      // $FlowFixMe\n      let fn = global.parcelHotUpdate[asset.id];\n      modules[asset.id] = [fn, deps];\n    } else if (bundle.parent) {\n      hmrApply(bundle.parent, asset);\n    }\n  }\n}\nfunction hmrDelete(bundle, id) {\n  let modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (modules[id]) {\n    // Collect dependencies that will become orphaned when this module is deleted.\n    let deps = modules[id][1];\n    let orphans = [];\n    for (let dep in deps) {\n      let parents = getParents(module.bundle.root, deps[dep]);\n      if (parents.length === 1) {\n        orphans.push(deps[dep]);\n      }\n    }\n\n    // Delete the module. This must be done before deleting dependencies in case of circular dependencies.\n    delete modules[id];\n    delete bundle.cache[id];\n\n    // Now delete the orphans.\n    orphans.forEach(id => {\n      hmrDelete(module.bundle.root, id);\n    });\n  } else if (bundle.parent) {\n    hmrDelete(bundle.parent, id);\n  }\n}\nfunction hmrAcceptCheck(bundle /*: ParcelRequire */, id /*: string */, depsByBundle /*: ?{ [string]: { [string]: string } }*/) {\n  if (hmrAcceptCheckOne(bundle, id, depsByBundle)) {\n    return true;\n  }\n\n  // Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.\n  let parents = getParents(module.bundle.root, id);\n  let accepted = false;\n  while (parents.length > 0) {\n    let v = parents.shift();\n    let a = hmrAcceptCheckOne(v[0], v[1], null);\n    if (a) {\n      // If this parent accepts, stop traversing upward, but still consider siblings.\n      accepted = true;\n    } else {\n      // Otherwise, queue the parents in the next level upward.\n      let p = getParents(module.bundle.root, v[1]);\n      if (p.length === 0) {\n        // If there are no parents, then we've reached an entry without accepting. Reload.\n        accepted = false;\n        break;\n      }\n      parents.push(...p);\n    }\n  }\n  return accepted;\n}\nfunction hmrAcceptCheckOne(bundle /*: ParcelRequire */, id /*: string */, depsByBundle /*: ?{ [string]: { [string]: string } }*/) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {\n    // If we reached the root bundle without finding where the asset should go,\n    // there's nothing to do. Mark as \"accepted\" so we don't reload the page.\n    if (!bundle.parent) {\n      return true;\n    }\n    return hmrAcceptCheck(bundle.parent, id, depsByBundle);\n  }\n  if (checkedAssets[id]) {\n    return true;\n  }\n  checkedAssets[id] = true;\n  var cached = bundle.cache[id];\n  assetsToDispose.push([bundle, id]);\n  if (!cached || cached.hot && cached.hot._acceptCallbacks.length) {\n    assetsToAccept.push([bundle, id]);\n    return true;\n  }\n}\nfunction hmrDispose(bundle /*: ParcelRequire */, id /*: string */) {\n  var cached = bundle.cache[id];\n  bundle.hotData[id] = {};\n  if (cached && cached.hot) {\n    cached.hot.data = bundle.hotData[id];\n  }\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData[id]);\n    });\n  }\n  delete bundle.cache[id];\n}\nfunction hmrAccept(bundle /*: ParcelRequire */, id /*: string */) {\n  // Execute the module.\n  bundle(id);\n\n  // Run the accept callbacks in the new version of the module.\n  var cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      var assetsToAlsoAccept = cb(function () {\n        return getParents(module.bundle.root, id);\n      });\n      if (assetsToAlsoAccept && assetsToAccept.length) {\n        assetsToAlsoAccept.forEach(function (a) {\n          hmrDispose(a[0], a[1]);\n        });\n\n        // $FlowFixMe[method-unbinding]\n        assetsToAccept.push.apply(assetsToAccept, assetsToAlsoAccept);\n      }\n    });\n  }\n}",null,"/** @module AuthClient */\nimport {\n  AnonymousIdentity,\n  DerEncodedPublicKey,\n  Identity,\n  Signature,\n  SignIdentity,\n} from '@dfinity/agent';\nimport {\n  Delegation,\n  DelegationChain,\n  isDelegationValid,\n  DelegationIdentity,\n  Ed25519KeyIdentity,\n  ECDSAKeyIdentity,\n} from '@dfinity/identity';\nimport { Principal } from '@dfinity/principal';\nimport { IdleManager, IdleManagerOptions } from './idleManager';\nimport {\n  AuthClientStorage,\n  IdbStorage,\n  isBrowser,\n  KEY_STORAGE_DELEGATION,\n  KEY_STORAGE_KEY,\n  KEY_VECTOR,\n  LocalStorage,\n} from './storage';\n\nexport { IdbStorage, LocalStorage, KEY_STORAGE_DELEGATION, KEY_STORAGE_KEY } from './storage';\nexport { IdbKeyVal, DBCreateOptions } from './db';\n\nconst IDENTITY_PROVIDER_DEFAULT = 'https://identity.ic0.app';\nconst IDENTITY_PROVIDER_ENDPOINT = '#authorize';\n\nconst ECDSA_KEY_LABEL = 'ECDSA';\nconst ED25519_KEY_LABEL = 'Ed25519';\ntype BaseKeyType = typeof ECDSA_KEY_LABEL | typeof ED25519_KEY_LABEL;\n\nconst INTERRUPT_CHECK_INTERVAL = 500;\n\nexport const ERROR_USER_INTERRUPT = 'UserInterrupt';\n\n/**\n * List of options for creating an {@link AuthClient}.\n */\nexport interface AuthClientCreateOptions {\n  /**\n   * An identity to use as the base\n   */\n  identity?: SignIdentity | ECDSAKeyIdentity;\n  /**\n   * Optional storage with get, set, and remove. Uses {@link IdbStorage} by default\n   */\n  storage?: AuthClientStorage;\n  /**\n   * type to use for the base key\n   * @default 'ECDSA'\n   * If you are using a custom storage provider that does not support CryptoKey storage,\n   * you should use 'Ed25519' as the key type, as it can serialize to a string\n   */\n  keyType?: BaseKeyType;\n\n  /**\n   * Options to handle idle timeouts\n   * @default after 30 minutes, invalidates the identity\n   */\n  idleOptions?: IdleOptions;\n}\n\nexport interface IdleOptions extends IdleManagerOptions {\n  /**\n   * Disables idle functionality for {@link IdleManager}\n   * @default false\n   */\n  disableIdle?: boolean;\n\n  /**\n   * Disables default idle behavior - call logout & reload window\n   * @default false\n   */\n  disableDefaultIdleCallback?: boolean;\n}\n\nexport * from './idleManager';\n\nexport interface AuthClientLoginOptions {\n  /**\n   * Identity provider\n   * @default \"https://identity.ic0.app\"\n   */\n  identityProvider?: string | URL;\n  /**\n   * Expiration of the authentication in nanoseconds\n   * @default  BigInt(8) hours * BigInt(3_600_000_000_000) nanoseconds\n   */\n  maxTimeToLive?: bigint;\n  /**\n   * Origin for Identity Provider to use while generating the delegated identity. For II, the derivation origin must authorize this origin by setting a record at `<derivation-origin>/.well-known/ii-alternative-origins`.\n   * @see https://github.com/dfinity/internet-identity/blob/main/docs/internet-identity-spec.adoc\n   */\n  derivationOrigin?: string | URL;\n  /**\n   * Auth Window feature config string\n   * @example \"toolbar=0,location=0,menubar=0,width=500,height=500,left=100,top=100\"\n   */\n  windowOpenerFeatures?: string;\n  /**\n   * Callback once login has completed\n   */\n  onSuccess?: (() => void) | (() => Promise<void>);\n  /**\n   * Callback in case authentication fails\n   */\n  onError?: ((error?: string) => void) | ((error?: string) => Promise<void>);\n}\n\ninterface InternetIdentityAuthRequest {\n  kind: 'authorize-client';\n  sessionPublicKey: Uint8Array;\n  maxTimeToLive?: bigint;\n  derivationOrigin?: string;\n}\n\ninterface InternetIdentityAuthResponseSuccess {\n  kind: 'authorize-client-success';\n  delegations: {\n    delegation: {\n      pubkey: Uint8Array;\n      expiration: bigint;\n      targets?: Principal[];\n    };\n    signature: Uint8Array;\n  }[];\n  userPublicKey: Uint8Array;\n}\n\ninterface AuthReadyMessage {\n  kind: 'authorize-ready';\n}\n\ninterface AuthResponseSuccess {\n  kind: 'authorize-client-success';\n  delegations: {\n    delegation: {\n      pubkey: Uint8Array;\n      expiration: bigint;\n      targets?: Principal[];\n    };\n    signature: Uint8Array;\n  }[];\n  userPublicKey: Uint8Array;\n}\n\ninterface AuthResponseFailure {\n  kind: 'authorize-client-failure';\n  text: string;\n}\n\ntype IdentityServiceResponseMessage = AuthReadyMessage | AuthResponse;\ntype AuthResponse = AuthResponseSuccess | AuthResponseFailure;\n\n/**\n * Tool to manage authentication and identity\n * @see {@link AuthClient}\n */\nexport class AuthClient {\n  /**\n   * Create an AuthClient to manage authentication and identity\n   * @constructs {@link AuthClient}\n   * @param {AuthClientCreateOptions} options\n   * @see {@link AuthClientCreateOptions}\n   * @param options.identity Optional Identity to use as the base\n   * @see {@link SignIdentity}\n   * @param options.storage Storage mechanism for delegration credentials\n   * @see {@link AuthClientStorage}\n   * @param options.keyType Type of key to use for the base key\n   * @param {IdleOptions} options.idleOptions Configures an {@link IdleManager}\n   * @see {@link IdleOptions}\n   * Default behavior is to clear stored identity and reload the page when a user goes idle, unless you set the disableDefaultIdleCallback flag or pass in a custom idle callback.\n   * @example\n   * const authClient = await AuthClient.create({\n   *   idleOptions: {\n   *     disableIdle: true\n   *   }\n   * })\n   */\n  public static async create(\n    options: {\n      /**\n       * An {@link Identity} to use as the base.\n       *  By default, a new {@link AnonymousIdentity}\n       */\n      identity?: SignIdentity;\n      /**\n       * {@link AuthClientStorage}\n       * @description Optional storage with get, set, and remove. Uses {@link IdbStorage} by default\n       */\n      storage?: AuthClientStorage;\n      /**\n       * type to use for the base key\n       * @default 'ECDSA'\n       * If you are using a custom storage provider that does not support CryptoKey storage,\n       * you should use 'Ed25519' as the key type, as it can serialize to a string\n       */\n      keyType?: BaseKeyType;\n      /**\n       * Options to handle idle timeouts\n       * @default after 10 minutes, invalidates the identity\n       */\n      idleOptions?: IdleOptions;\n    } = {},\n  ): Promise<AuthClient> {\n    const storage = options.storage ?? new IdbStorage();\n    const keyType = options.keyType ?? ECDSA_KEY_LABEL;\n\n    let key: null | SignIdentity | ECDSAKeyIdentity = null;\n    if (options.identity) {\n      key = options.identity;\n    } else {\n      let maybeIdentityStorage = await storage.get(KEY_STORAGE_KEY);\n      if (!maybeIdentityStorage && isBrowser) {\n        // Attempt to migrate from localstorage\n        try {\n          const fallbackLocalStorage = new LocalStorage();\n          const localChain = await fallbackLocalStorage.get(KEY_STORAGE_DELEGATION);\n          const localKey = await fallbackLocalStorage.get(KEY_STORAGE_KEY);\n          // not relevant for Ed25519\n          if (localChain && localKey && keyType === ECDSA_KEY_LABEL) {\n            console.log('Discovered an identity stored in localstorage. Migrating to IndexedDB');\n            await storage.set(KEY_STORAGE_DELEGATION, localChain);\n            await storage.set(KEY_STORAGE_KEY, localKey);\n\n            maybeIdentityStorage = localChain;\n            // clean up\n            await fallbackLocalStorage.remove(KEY_STORAGE_DELEGATION);\n            await fallbackLocalStorage.remove(KEY_STORAGE_KEY);\n          }\n        } catch (error) {\n          console.error('error while attempting to recover localstorage: ' + error);\n        }\n      }\n      if (maybeIdentityStorage) {\n        try {\n          if (typeof maybeIdentityStorage === 'object') {\n            if (keyType === ED25519_KEY_LABEL && typeof maybeIdentityStorage === 'string') {\n              key = await Ed25519KeyIdentity.fromJSON(maybeIdentityStorage);\n            } else {\n              key = await ECDSAKeyIdentity.fromKeyPair(maybeIdentityStorage);\n            }\n          } else if (typeof maybeIdentityStorage === 'string') {\n            // This is a legacy identity, which is a serialized Ed25519KeyIdentity.\n            key = Ed25519KeyIdentity.fromJSON(maybeIdentityStorage);\n          }\n        } catch (e) {\n          // Ignore this, this means that the localStorage value isn't a valid Ed25519KeyIdentity or ECDSAKeyIdentity\n          // serialization.\n        }\n      }\n    }\n\n    let identity = new AnonymousIdentity();\n    let chain: null | DelegationChain = null;\n    if (key) {\n      try {\n        const chainStorage = await storage.get(KEY_STORAGE_DELEGATION);\n        if (typeof chainStorage === 'object' && chainStorage !== null) {\n          throw new Error(\n            'Delegation chain is incorrectly stored. A delegation chain should be stored as a string.',\n          );\n        }\n\n        if (options.identity) {\n          identity = options.identity;\n        } else if (chainStorage) {\n          chain = DelegationChain.fromJSON(chainStorage);\n\n          // Verify that the delegation isn't expired.\n          if (!isDelegationValid(chain)) {\n            await _deleteStorage(storage);\n            key = null;\n          } else {\n            identity = DelegationIdentity.fromDelegation(key, chain);\n          }\n        }\n      } catch (e) {\n        console.error(e);\n        // If there was a problem loading the chain, delete the key.\n        await _deleteStorage(storage);\n        key = null;\n      }\n    }\n    let idleManager: IdleManager | undefined = undefined;\n    if (options.idleOptions?.disableIdle) {\n      idleManager = undefined;\n    }\n    // if there is a delegation chain or provided identity, setup idleManager\n    else if (chain || options.identity) {\n      idleManager = IdleManager.create(options.idleOptions);\n    }\n\n    if (!key) {\n      // Create a new key (whether or not one was in storage).\n      if (keyType === ED25519_KEY_LABEL) {\n        key = await Ed25519KeyIdentity.generate();\n        await storage.set(KEY_STORAGE_KEY, JSON.stringify((key as Ed25519KeyIdentity).toJSON()));\n      } else {\n        if (options.storage && keyType === ECDSA_KEY_LABEL) {\n          console.warn(\n            `You are using a custom storage provider that may not support CryptoKey storage. If you are using a custom storage provider that does not support CryptoKey storage, you should use '${ED25519_KEY_LABEL}' as the key type, as it can serialize to a string`,\n          );\n        }\n        key = await ECDSAKeyIdentity.generate();\n        await storage.set(KEY_STORAGE_KEY, (key as ECDSAKeyIdentity).getKeyPair());\n      }\n    }\n\n    return new this(identity, key, chain, storage, idleManager, options);\n  }\n\n  protected constructor(\n    private _identity: Identity,\n    private _key: SignIdentity,\n    private _chain: DelegationChain | null,\n    private _storage: AuthClientStorage,\n    public idleManager: IdleManager | undefined,\n    private _createOptions: AuthClientCreateOptions | undefined,\n    // A handle on the IdP window.\n    private _idpWindow?: Window,\n    // The event handler for processing events from the IdP.\n    private _eventHandler?: (event: MessageEvent) => void,\n  ) {\n    const logout = this.logout.bind(this);\n    const idleOptions = _createOptions?.idleOptions;\n    /**\n     * Default behavior is to clear stored identity and reload the page.\n     * By either setting the disableDefaultIdleCallback flag or passing in a custom idle callback, we will ignore this config\n     */\n    if (!idleOptions?.onIdle && !idleOptions?.disableDefaultIdleCallback) {\n      this.idleManager?.registerCallback(() => {\n        logout();\n        location.reload();\n      });\n    }\n  }\n\n  private async _handleSuccess(\n    message: InternetIdentityAuthResponseSuccess,\n    onSuccess?: () => void,\n  ) {\n    const delegations = message.delegations.map(signedDelegation => {\n      return {\n        delegation: new Delegation(\n          signedDelegation.delegation.pubkey,\n          signedDelegation.delegation.expiration,\n          signedDelegation.delegation.targets,\n        ),\n        signature: signedDelegation.signature.buffer as Signature,\n      };\n    });\n\n    const delegationChain = DelegationChain.fromDelegations(\n      delegations,\n      message.userPublicKey.buffer as DerEncodedPublicKey,\n    );\n\n    const key = this._key;\n    if (!key) {\n      return;\n    }\n\n    this._chain = delegationChain;\n    this._identity = DelegationIdentity.fromDelegation(key, this._chain);\n\n    this._idpWindow?.close();\n    if (!this.idleManager) {\n      const idleOptions = this._createOptions?.idleOptions;\n      this.idleManager = IdleManager.create(idleOptions);\n\n      if (!idleOptions?.onIdle && !idleOptions?.disableDefaultIdleCallback) {\n        this.idleManager?.registerCallback(() => {\n          this.logout();\n          location.reload();\n        });\n      }\n    }\n    this._removeEventListener();\n    delete this._idpWindow;\n\n    if (this._chain) {\n      await this._storage.set(KEY_STORAGE_DELEGATION, JSON.stringify(this._chain.toJSON()));\n    }\n\n    // onSuccess should be the last thing to do to avoid consumers\n    // interfering by navigating or refreshing the page\n    onSuccess?.();\n  }\n\n  public getIdentity(): Identity {\n    return this._identity;\n  }\n\n  public async isAuthenticated(): Promise<boolean> {\n    return !this.getIdentity().getPrincipal().isAnonymous() && this._chain !== null;\n  }\n\n  /**\n   * AuthClient Login -\n   * Opens up a new window to authenticate with Internet Identity\n   * @param {AuthClientLoginOptions} options\n   * @param options.identityProvider Identity provider\n   * @param options.maxTimeToLive Expiration of the authentication in nanoseconds\n   * @param options.derivationOrigin Origin for Identity Provider to use while generating the delegated identity\n   * @param options.windowOpenerFeatures Configures the opened authentication window\n   * @param options.onSuccess Callback once login has completed\n   * @param options.onError Callback in case authentication fails\n   * @example\n   * const authClient = await AuthClient.create();\n   * authClient.login({\n   *  identityProvider: 'http://<canisterID>.127.0.0.1:8000',\n   *  maxTimeToLive: BigInt (7) * BigInt(24) * BigInt(3_600_000_000_000), // 1 week\n   *  windowOpenerFeatures: \"toolbar=0,location=0,menubar=0,width=500,height=500,left=100,top=100\",\n   *  onSuccess: () => {\n   *    console.log('Login Successful!');\n   *  },\n   *  onError: (error) => {\n   *    console.error('Login Failed: ', error);\n   *  }\n   * });\n   */\n  public async login(options?: {\n    /**\n     * Identity provider\n     * @default \"https://identity.ic0.app\"\n     */\n    identityProvider?: string | URL;\n    /**\n     * Expiration of the authentication in nanoseconds\n     * @default  BigInt(8) hours * BigInt(3_600_000_000_000) nanoseconds\n     */\n    maxTimeToLive?: bigint;\n    /**\n     * Auth Window feature config string\n     * @example \"toolbar=0,location=0,menubar=0,width=500,height=500,left=100,top=100\"\n     */\n    /**\n     * Origin for Identity Provider to use while generating the delegated identity. For II, the derivation origin must authorize this origin by setting a record at `<derivation-origin>/.well-known/ii-alternative-origins`.\n     * @see https://github.com/dfinity/internet-identity/blob/main/docs/internet-identity-spec.adoc\n     */\n    derivationOrigin?: string | URL;\n    windowOpenerFeatures?: string;\n    /**\n     * Callback once login has completed\n     */\n    onSuccess?: (() => void) | (() => Promise<void>);\n    /**\n     * Callback in case authentication fails\n     */\n    onError?: ((error?: string) => void) | ((error?: string) => Promise<void>);\n  }): Promise<void> {\n    // Set default maxTimeToLive to 8 hours\n    const defaultTimeToLive = /* hours */ BigInt(8) * /* nanoseconds */ BigInt(3_600_000_000_000);\n\n    // Create the URL of the IDP. (e.g. https://XXXX/#authorize)\n    const identityProviderUrl = new URL(\n      options?.identityProvider?.toString() || IDENTITY_PROVIDER_DEFAULT,\n    );\n    // Set the correct hash if it isn't already set.\n    identityProviderUrl.hash = IDENTITY_PROVIDER_ENDPOINT;\n\n    // If `login` has been called previously, then close/remove any previous windows\n    // and event listeners.\n    this._idpWindow?.close();\n    this._removeEventListener();\n\n    // Add an event listener to handle responses.\n    this._eventHandler = this._getEventHandler(identityProviderUrl, {\n      maxTimeToLive: options?.maxTimeToLive ?? defaultTimeToLive,\n      ...options,\n    });\n    window.addEventListener('message', this._eventHandler);\n\n    // Open a new window with the IDP provider.\n    this._idpWindow =\n      window.open(identityProviderUrl.toString(), 'idpWindow', options?.windowOpenerFeatures) ??\n      undefined;\n\n    // Check if the _idpWindow is closed by user.\n    const checkInterruption = (): void => {\n      // The _idpWindow is opened and not yet closed by the client\n      if (this._idpWindow) {\n        if (this._idpWindow.closed) {\n          this._handleFailure(ERROR_USER_INTERRUPT, options?.onError);\n        } else {\n          setTimeout(checkInterruption, INTERRUPT_CHECK_INTERVAL);\n        }\n      }\n    };\n    checkInterruption();\n  }\n\n  private _getEventHandler(identityProviderUrl: URL, options?: AuthClientLoginOptions) {\n    return async (event: MessageEvent) => {\n      if (event.origin !== identityProviderUrl.origin) {\n        console.warn(\n          `WARNING: expected origin '${identityProviderUrl.origin}', got '${event.origin}' (ignoring)`,\n        );\n        return;\n      }\n\n      const message = event.data as IdentityServiceResponseMessage;\n\n      switch (message.kind) {\n        case 'authorize-ready': {\n          // IDP is ready. Send a message to request authorization.\n          const request: InternetIdentityAuthRequest = {\n            kind: 'authorize-client',\n            sessionPublicKey: new Uint8Array(this._key?.getPublicKey().toDer() as ArrayBuffer),\n            maxTimeToLive: options?.maxTimeToLive,\n            derivationOrigin: options?.derivationOrigin?.toString(),\n          };\n          this._idpWindow?.postMessage(request, identityProviderUrl.origin);\n          break;\n        }\n        case 'authorize-client-success':\n          // Create the delegation chain and store it.\n          try {\n            await this._handleSuccess(message, options?.onSuccess);\n          } catch (err) {\n            this._handleFailure((err as Error).message, options?.onError);\n          }\n          break;\n        case 'authorize-client-failure':\n          this._handleFailure(message.text, options?.onError);\n          break;\n        default:\n          break;\n      }\n    };\n  }\n\n  private _handleFailure(errorMessage?: string, onError?: (error?: string) => void): void {\n    this._idpWindow?.close();\n    onError?.(errorMessage);\n    this._removeEventListener();\n    delete this._idpWindow;\n  }\n\n  private _removeEventListener() {\n    if (this._eventHandler) {\n      window.removeEventListener('message', this._eventHandler);\n    }\n    this._eventHandler = undefined;\n  }\n\n  public async logout(options: { returnTo?: string } = {}): Promise<void> {\n    await _deleteStorage(this._storage);\n\n    // Reset this auth client to a non-authenticated state.\n    this._identity = new AnonymousIdentity();\n    this._chain = null;\n\n    if (options.returnTo) {\n      try {\n        window.history.pushState({}, '', options.returnTo);\n      } catch (e) {\n        window.location.href = options.returnTo;\n      }\n    }\n  }\n}\n\nasync function _deleteStorage(storage: AuthClientStorage) {\n  await storage.remove(KEY_STORAGE_KEY);\n  await storage.remove(KEY_STORAGE_DELEGATION);\n  await storage.remove(KEY_VECTOR);\n}\n",null,"export { Ed25519KeyIdentity, Ed25519PublicKey } from './identity/ed25519';\nexport * from './identity/ecdsa';\nexport * from './identity/delegation';\nexport { WebAuthnIdentity } from './identity/webauthn';\nexport { wrapDER, unwrapDER, DER_COSE_OID, ED25519_OID } from '@dfinity/agent';\n\n/**\n * @deprecated due to size of dependencies. Use `@dfinity/identity-secp256k1` instead.\n */\nexport class Secp256k1KeyIdentity {\n  constructor() {\n    throw new Error(\n      'Secp256k1KeyIdentity has been moved to a new repo: @dfinity/identity-secp256k1',\n    );\n  }\n}\n",null,"import {\n  DerEncodedPublicKey,\n  KeyPair,\n  PublicKey,\n  Signature,\n  SignIdentity,\n  uint8ToBuf,\n  ED25519_OID,\n  unwrapDER,\n  wrapDER,\n  fromHex,\n  toHex,\n} from '@dfinity/agent';\nimport { ed25519 } from '@noble/curves/ed25519';\n\nexport class Ed25519PublicKey implements PublicKey {\n  public static from(key: PublicKey): Ed25519PublicKey {\n    return this.fromDer(key.toDer());\n  }\n\n  public static fromRaw(rawKey: ArrayBuffer): Ed25519PublicKey {\n    return new Ed25519PublicKey(rawKey);\n  }\n\n  public static fromDer(derKey: DerEncodedPublicKey): Ed25519PublicKey {\n    return new Ed25519PublicKey(this.derDecode(derKey));\n  }\n\n  // The length of Ed25519 public keys is always 32 bytes.\n  private static RAW_KEY_LENGTH = 32;\n\n  private static derEncode(publicKey: ArrayBuffer): DerEncodedPublicKey {\n    return wrapDER(publicKey, ED25519_OID).buffer as DerEncodedPublicKey;\n  }\n\n  private static derDecode(key: DerEncodedPublicKey): ArrayBuffer {\n    const unwrapped = unwrapDER(key, ED25519_OID);\n    if (unwrapped.length !== this.RAW_KEY_LENGTH) {\n      throw new Error('An Ed25519 public key must be exactly 32bytes long');\n    }\n    return unwrapped;\n  }\n\n  #rawKey: ArrayBuffer;\n\n  public get rawKey(): ArrayBuffer {\n    return this.#rawKey;\n  }\n\n  #derKey: DerEncodedPublicKey;\n\n  public get derKey(): DerEncodedPublicKey {\n    return this.#derKey;\n  }\n\n  // `fromRaw` and `fromDer` should be used for instantiation, not this constructor.\n  private constructor(key: ArrayBuffer) {\n    if (key.byteLength !== Ed25519PublicKey.RAW_KEY_LENGTH) {\n      throw new Error('An Ed25519 public key must be exactly 32bytes long');\n    }\n    this.#rawKey = key;\n    this.#derKey = Ed25519PublicKey.derEncode(key);\n  }\n\n  public toDer(): DerEncodedPublicKey {\n    return this.derKey;\n  }\n\n  public toRaw(): ArrayBuffer {\n    return this.rawKey;\n  }\n}\n\nexport class Ed25519KeyIdentity extends SignIdentity {\n  public static generate(seed = new Uint8Array(32)): Ed25519KeyIdentity {\n    if (seed && seed.length !== 32) {\n      throw new Error('Ed25519 Seed needs to be 32 bytes long.');\n    }\n    if (!seed) seed = ed25519.utils.randomPrivateKey();\n    const sk = new Uint8Array(32);\n    for (let i = 0; i < 32; i++) sk[i] = new Uint8Array(seed)[i];\n\n    const pk = ed25519.getPublicKey(sk);\n    return Ed25519KeyIdentity.fromKeyPair(pk, sk);\n  }\n\n  public static fromParsedJson(obj: JsonnableEd25519KeyIdentity): Ed25519KeyIdentity {\n    const [publicKeyDer, privateKeyRaw] = obj;\n    return new Ed25519KeyIdentity(\n      Ed25519PublicKey.fromDer(fromHex(publicKeyDer) as DerEncodedPublicKey),\n      fromHex(privateKeyRaw),\n    );\n  }\n\n  public static fromJSON(json: string): Ed25519KeyIdentity {\n    const parsed = JSON.parse(json);\n    if (Array.isArray(parsed)) {\n      if (typeof parsed[0] === 'string' && typeof parsed[1] === 'string') {\n        return this.fromParsedJson([parsed[0], parsed[1]]);\n      } else {\n        throw new Error('Deserialization error: JSON must have at least 2 items.');\n      }\n    }\n    throw new Error(`Deserialization error: Invalid JSON type for string: ${JSON.stringify(json)}`);\n  }\n\n  public static fromKeyPair(publicKey: ArrayBuffer, privateKey: ArrayBuffer): Ed25519KeyIdentity {\n    return new Ed25519KeyIdentity(Ed25519PublicKey.fromRaw(publicKey), privateKey);\n  }\n\n  public static fromSecretKey(secretKey: ArrayBuffer): Ed25519KeyIdentity {\n    const publicKey = ed25519.getPublicKey(new Uint8Array(secretKey));\n    return Ed25519KeyIdentity.fromKeyPair(publicKey, secretKey);\n  }\n\n  #publicKey: Ed25519PublicKey;\n  #privateKey: Uint8Array;\n\n  // `fromRaw` and `fromDer` should be used for instantiation, not this constructor.\n  protected constructor(publicKey: PublicKey, privateKey: ArrayBuffer) {\n    super();\n    this.#publicKey = Ed25519PublicKey.from(publicKey);\n    this.#privateKey = new Uint8Array(privateKey);\n  }\n\n  /**\n   * Serialize this key to JSON.\n   */\n  public toJSON(): JsonnableEd25519KeyIdentity {\n    return [toHex(this.#publicKey.toDer()), toHex(this.#privateKey)];\n  }\n\n  /**\n   * Return a copy of the key pair.\n   */\n  public getKeyPair(): KeyPair {\n    return {\n      secretKey: this.#privateKey,\n      publicKey: this.#publicKey,\n    };\n  }\n\n  /**\n   * Return the public key.\n   */\n  public getPublicKey(): Required<PublicKey> {\n    return this.#publicKey;\n  }\n\n  /**\n   * Signs a blob of data, with this identity's private key.\n   * @param challenge - challenge to sign with this identity's secretKey, producing a signature\n   */\n  public async sign(challenge: ArrayBuffer): Promise<Signature> {\n    const blob = new Uint8Array(challenge);\n    // Some implementations of Ed25519 private keys append a public key to the end of the private key. We only want the private key.\n    const signature = uint8ToBuf(ed25519.sign(blob, this.#privateKey.slice(0, 32)));\n    // add { __signature__: void; } to the signature to make it compatible with the agent\n\n    Object.defineProperty(signature, '__signature__', {\n      enumerable: false,\n      value: undefined,\n    });\n\n    return signature as Signature;\n  }\n\n  /**\n   * Verify\n   * @param sig - signature to verify\n   * @param msg - message to verify\n   * @param pk - public key\n   * @returns - true if the signature is valid, false otherwise\n   */\n  public static verify(\n    sig: ArrayBuffer | Uint8Array | string,\n    msg: ArrayBuffer | Uint8Array | string,\n    pk: ArrayBuffer | Uint8Array | string,\n  ) {\n    const [signature, message, publicKey] = [sig, msg, pk].map(x => {\n      if (typeof x === 'string') {\n        x = fromHex(x);\n      }\n      if (x instanceof Uint8Array) {\n        x = x.buffer;\n      }\n      return new Uint8Array(x);\n    });\n    return ed25519.verify(message, signature, publicKey);\n  }\n}\n\ntype PublicKeyHex = string;\ntype SecretKeyHex = string;\nexport type JsonnableEd25519KeyIdentity = [PublicKeyHex, SecretKeyHex];\n",null,"import { DerEncodedPublicKey, Signature, SignIdentity } from '@dfinity/agent';\n\n/**\n * Options used in a {@link ECDSAKeyIdentity}\n */\nexport type CryptoKeyOptions = {\n  extractable?: boolean;\n  keyUsages?: KeyUsage[];\n  subtleCrypto?: SubtleCrypto;\n};\n\nexport class CryptoError extends Error {\n  constructor(public readonly message: string) {\n    super(message);\n    Object.setPrototypeOf(this, CryptoError.prototype);\n  }\n}\n\nexport interface DerCryptoKey extends CryptoKey {\n  toDer: () => DerEncodedPublicKey;\n}\n\n/**\n * Utility method to ensure that a subtleCrypto implementation is provided or is available in the global context\n * @param subtleCrypto SubtleCrypto implementation\n * @returns subleCrypto\n */\nfunction _getEffectiveCrypto(subtleCrypto: CryptoKeyOptions['subtleCrypto']): SubtleCrypto {\n  if (typeof global !== 'undefined' && global['crypto'] && global['crypto']['subtle']) {\n    return global['crypto']['subtle'];\n  }\n  if (subtleCrypto) {\n    return subtleCrypto;\n  } else if (typeof crypto !== 'undefined' && crypto['subtle']) {\n    return crypto.subtle;\n  } else {\n    throw new CryptoError(\n      'Global crypto was not available and none was provided. Please inlcude a SubtleCrypto implementation. See https://developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto',\n    );\n  }\n}\n\n/**\n * An identity interface that wraps an ECDSA keypair using the P-256 named curve. Supports DER-encoding and decoding for agent calls\n */\nexport class ECDSAKeyIdentity extends SignIdentity {\n  /**\n   * Generates a randomly generated identity for use in calls to the Internet Computer.\n   * @param {CryptoKeyOptions} options optional settings\n   * @param {CryptoKeyOptions['extractable']} options.extractable - whether the key should allow itself to be used. Set to false for maximum security.\n   * @param {CryptoKeyOptions['keyUsages']} options.keyUsages - a list of key usages that the key can be used for\n   * @param {CryptoKeyOptions['subtleCrypto']} options.subtleCrypto interface\n   * @constructs ECDSAKeyIdentity\n   * @returns a {@link ECDSAKeyIdentity}\n   */\n  public static async generate(options?: CryptoKeyOptions): Promise<ECDSAKeyIdentity> {\n    const { extractable = false, keyUsages = ['sign', 'verify'], subtleCrypto } = options ?? {};\n    const effectiveCrypto = _getEffectiveCrypto(subtleCrypto);\n    const keyPair = await effectiveCrypto.generateKey(\n      {\n        name: 'ECDSA',\n        namedCurve: 'P-256',\n      },\n      extractable,\n      keyUsages,\n    );\n    const derKey = (await effectiveCrypto.exportKey(\n      'spki',\n      keyPair.publicKey,\n    )) as DerEncodedPublicKey;\n\n    return new this(keyPair, derKey, effectiveCrypto);\n  }\n\n  /**\n   * generates an identity from a public and private key. Please ensure that you are generating these keys securely and protect the user's private key\n   * @param keyPair a {@link CryptoKeyPair}\n   * @param subtleCrypto a {@link SubtleCrypto} interface in case one is not available globally\n   * @returns an {@link ECDSAKeyIdentity}\n   */\n  public static async fromKeyPair(\n    keyPair: CryptoKeyPair | { privateKey: CryptoKey; publicKey: CryptoKey },\n    subtleCrypto?: SubtleCrypto,\n  ): Promise<ECDSAKeyIdentity> {\n    const effectiveCrypto = _getEffectiveCrypto(subtleCrypto);\n    const derKey = (await effectiveCrypto.exportKey(\n      'spki',\n      keyPair.publicKey,\n    )) as DerEncodedPublicKey;\n    return new ECDSAKeyIdentity(keyPair, derKey, effectiveCrypto);\n  }\n\n  protected _derKey: DerEncodedPublicKey;\n  protected _keyPair: CryptoKeyPair;\n  protected _subtleCrypto: SubtleCrypto;\n\n  // `fromKeyPair` and `generate` should be used for instantiation, not this constructor.\n  protected constructor(\n    keyPair: CryptoKeyPair,\n    derKey: DerEncodedPublicKey,\n    subtleCrypto: SubtleCrypto,\n  ) {\n    super();\n    this._keyPair = keyPair;\n    this._derKey = derKey;\n    this._subtleCrypto = subtleCrypto;\n  }\n\n  /**\n   * Return the internally-used key pair.\n   * @returns a {@link CryptoKeyPair}\n   */\n  public getKeyPair(): CryptoKeyPair {\n    return this._keyPair;\n  }\n\n  /**\n   * Return the public key.\n   * @returns an {@link DerCryptoKey}\n   */\n  public getPublicKey(): DerCryptoKey {\n    const derKey = this._derKey;\n    const key: DerCryptoKey = Object.create(this._keyPair.publicKey);\n    key.toDer = function () {\n      return derKey;\n    };\n\n    return key;\n  }\n\n  /**\n   * Signs a blob of data, with this identity's private key.\n   * @param {ArrayBuffer} challenge - challenge to sign with this identity's secretKey, producing a signature\n   * @returns {Promise<Signature>} signature\n   */\n  public async sign(challenge: ArrayBuffer): Promise<Signature> {\n    const params: EcdsaParams = {\n      name: 'ECDSA',\n      hash: { name: 'SHA-256' },\n    };\n    this._keyPair.privateKey;\n    const signature = await this._subtleCrypto.sign(params, this._keyPair.privateKey, challenge);\n\n    return signature as Signature;\n  }\n}\n\nexport default ECDSAKeyIdentity;\n",null,"import {\n  DerEncodedPublicKey,\n  fromHex,\n  HttpAgentRequest,\n  PublicKey,\n  requestIdOf,\n  Signature,\n  SignIdentity,\n  toHex,\n} from '@dfinity/agent';\nimport { Principal } from '@dfinity/principal';\nimport * as cbor from 'simple-cbor';\n\nconst domainSeparator = new TextEncoder().encode('\\x1Aic-request-auth-delegation');\nconst requestDomainSeparator = new TextEncoder().encode('\\x0Aic-request');\n\nfunction _parseBlob(value: unknown): ArrayBuffer {\n  if (typeof value !== 'string' || value.length < 64) {\n    throw new Error('Invalid public key.');\n  }\n\n  return fromHex(value);\n}\n\n/**\n * A single delegation object that is signed by a private key. This is constructed by\n * `DelegationChain.create()`.\n *\n * {@see DelegationChain}\n */\nexport class Delegation {\n  constructor(\n    public readonly pubkey: ArrayBuffer,\n    public readonly expiration: bigint,\n    public readonly targets?: Principal[],\n  ) {}\n\n  public toCBOR(): cbor.CborValue {\n    // Expiration field needs to be encoded as a u64 specifically.\n    return cbor.value.map({\n      pubkey: cbor.value.bytes(this.pubkey),\n      expiration: cbor.value.u64(this.expiration.toString(16), 16),\n      ...(this.targets && {\n        targets: cbor.value.array(this.targets.map(t => cbor.value.bytes(t.toUint8Array()))),\n      }),\n    });\n  }\n\n  public toJSON(): JsonnableDelegation {\n    // every string should be hex and once-de-hexed,\n    // discoverable what it is (e.g. de-hex to get JSON with a 'type' property, or de-hex to DER\n    // with an OID). After de-hex, if it's not obvious what it is, it's an ArrayBuffer.\n    return {\n      expiration: this.expiration.toString(16),\n      pubkey: toHex(this.pubkey),\n      ...(this.targets && { targets: this.targets.map(p => p.toHex()) }),\n    };\n  }\n}\n\n/**\n * Type of ReturnType<Delegation.toJSON>.\n * The goal here is to stringify all non-JSON-compatible types to some bytes representation we can\n * stringify as hex.\n * (Hex shouldn't be ambiguous ever, because you can encode as DER with semantic OIDs).\n */\ninterface JsonnableDelegation {\n  // A BigInt of Nanoseconds since epoch as hex\n  expiration: string;\n  // Hexadecimal representation of the DER public key.\n  pubkey: string;\n  // Array of strings, where each string is hex of principal blob (*NOT* textual representation).\n  targets?: string[];\n}\n\n/**\n * A signed delegation, which lends its identity to the public key in the delegation\n * object. This is constructed by `DelegationChain.create()`.\n *\n * {@see DelegationChain}\n */\nexport interface SignedDelegation {\n  delegation: Delegation;\n  signature: Signature;\n}\n\n/**\n * Sign a single delegation object for a period of time.\n * @param from The identity that lends its delegation.\n * @param to The identity that receives the delegation.\n * @param expiration An expiration date for this delegation.\n * @param targets Limit this delegation to the target principals.\n */\nasync function _createSingleDelegation(\n  from: SignIdentity,\n  to: PublicKey,\n  expiration: Date,\n  targets?: Principal[],\n): Promise<SignedDelegation> {\n  const delegation: Delegation = new Delegation(\n    to.toDer(),\n    BigInt(+expiration) * BigInt(1000000), // In nanoseconds.\n    targets,\n  );\n  // The signature is calculated by signing the concatenation of the domain separator\n  // and the message.\n  // Note: To ensure Safari treats this as a user gesture, ensure to not use async methods\n  // besides the actualy webauthn functionality (such as `sign`). Safari will de-register\n  // a user gesture if you await an async call thats not fetch, xhr, or setTimeout.\n  const challenge = new Uint8Array([\n    ...domainSeparator,\n    ...new Uint8Array(requestIdOf(delegation)),\n  ]);\n  const signature = await from.sign(challenge);\n\n  return {\n    delegation,\n    signature,\n  };\n}\n\nexport interface JsonnableDelegationChain {\n  publicKey: string;\n  delegations: Array<{\n    signature: string;\n    delegation: {\n      pubkey: string;\n      expiration: string;\n      targets?: string[];\n    };\n  }>;\n}\n\n/**\n * A chain of delegations. This is JSON Serializable.\n * This is the object to serialize and pass to a DelegationIdentity. It does not keep any\n * private keys.\n */\nexport class DelegationChain {\n  /**\n   * Create a delegation chain between two (or more) keys. By default, the expiration time\n   * will be very short (15 minutes).\n   *\n   * To build a chain of more than 2 identities, this function needs to be called multiple times,\n   * passing the previous delegation chain into the options argument. For example:\n   * @example\n   * const rootKey = createKey();\n   * const middleKey = createKey();\n   * const bottomeKey = createKey();\n   *\n   * const rootToMiddle = await DelegationChain.create(\n   *   root, middle.getPublicKey(), Date.parse('2100-01-01'),\n   * );\n   * const middleToBottom = await DelegationChain.create(\n   *   middle, bottom.getPublicKey(), Date.parse('2100-01-01'), { previous: rootToMiddle },\n   * );\n   *\n   * // We can now use a delegation identity that uses the delegation above:\n   * const identity = DelegationIdentity.fromDelegation(bottomKey, middleToBottom);\n   * @param from The identity that will delegate.\n   * @param to The identity that gets delegated. It can now sign messages as if it was the\n   *           identity above.\n   * @param expiration The length the delegation is valid. By default, 15 minutes from calling\n   *                   this function.\n   * @param options A set of options for this delegation. expiration and previous\n   * @param options.previous - Another DelegationChain that this chain should start with.\n   * @param options.targets - targets that scope the delegation (e.g. Canister Principals)\n   */\n  public static async create(\n    from: SignIdentity,\n    to: PublicKey,\n    expiration: Date = new Date(Date.now() + 15 * 60 * 1000),\n    options: {\n      previous?: DelegationChain;\n      targets?: Principal[];\n    } = {},\n  ): Promise<DelegationChain> {\n    const delegation = await _createSingleDelegation(from, to, expiration, options.targets);\n    return new DelegationChain(\n      [...(options.previous?.delegations || []), delegation],\n      options.previous?.publicKey || from.getPublicKey().toDer(),\n    );\n  }\n\n  /**\n   * Creates a DelegationChain object from a JSON string.\n   * @param json The JSON string to parse.\n   */\n  public static fromJSON(json: string | JsonnableDelegationChain): DelegationChain {\n    const { publicKey, delegations } = typeof json === 'string' ? JSON.parse(json) : json;\n    if (!Array.isArray(delegations)) {\n      throw new Error('Invalid delegations.');\n    }\n\n    const parsedDelegations: SignedDelegation[] = delegations.map(signedDelegation => {\n      const { delegation, signature } = signedDelegation;\n      const { pubkey, expiration, targets } = delegation;\n      if (targets !== undefined && !Array.isArray(targets)) {\n        throw new Error('Invalid targets.');\n      }\n\n      return {\n        delegation: new Delegation(\n          _parseBlob(pubkey),\n          BigInt('0x' + expiration), // expiration in JSON is an hexa string (See toJSON() below).\n          targets &&\n            targets.map((t: unknown) => {\n              if (typeof t !== 'string') {\n                throw new Error('Invalid target.');\n              }\n              return Principal.fromHex(t);\n            }),\n        ),\n        signature: _parseBlob(signature) as Signature,\n      };\n    });\n\n    return new this(parsedDelegations, _parseBlob(publicKey) as DerEncodedPublicKey);\n  }\n\n  /**\n   * Creates a DelegationChain object from a list of delegations and a DER-encoded public key.\n   * @param delegations The list of delegations.\n   * @param publicKey The DER-encoded public key of the key-pair signing the first delegation.\n   */\n  public static fromDelegations(\n    delegations: SignedDelegation[],\n    publicKey: DerEncodedPublicKey,\n  ): DelegationChain {\n    return new this(delegations, publicKey);\n  }\n\n  protected constructor(\n    public readonly delegations: SignedDelegation[],\n    public readonly publicKey: DerEncodedPublicKey,\n  ) {}\n\n  public toJSON(): JsonnableDelegationChain {\n    return {\n      delegations: this.delegations.map(signedDelegation => {\n        const { delegation, signature } = signedDelegation;\n        const { targets } = delegation;\n        return {\n          delegation: {\n            expiration: delegation.expiration.toString(16),\n            pubkey: toHex(delegation.pubkey),\n            ...(targets && {\n              targets: targets.map(t => t.toHex()),\n            }),\n          },\n          signature: toHex(signature),\n        };\n      }),\n      publicKey: toHex(this.publicKey),\n    };\n  }\n}\n\n/**\n * An Identity that adds delegation to a request. Everywhere in this class, the name\n * innerKey refers to the SignIdentity that is being used to sign the requests, while\n * originalKey is the identity that is being borrowed. More identities can be used\n * in the middle to delegate.\n */\nexport class DelegationIdentity extends SignIdentity {\n  /**\n   * Create a delegation without having access to delegateKey.\n   * @param key The key used to sign the reqyests.\n   * @param delegation A delegation object created using `createDelegation`.\n   */\n  public static fromDelegation(\n    key: Pick<SignIdentity, 'sign'>,\n    delegation: DelegationChain,\n  ): DelegationIdentity {\n    return new this(key, delegation);\n  }\n\n  protected constructor(\n    private _inner: Pick<SignIdentity, 'sign'>,\n    private _delegation: DelegationChain,\n  ) {\n    super();\n  }\n\n  public getDelegation(): DelegationChain {\n    return this._delegation;\n  }\n\n  public getPublicKey(): PublicKey {\n    return {\n      derKey: this._delegation.publicKey,\n      toDer: () => this._delegation.publicKey,\n    };\n  }\n  public sign(blob: ArrayBuffer): Promise<Signature> {\n    return this._inner.sign(blob);\n  }\n\n  public async transformRequest(request: HttpAgentRequest): Promise<unknown> {\n    const { body, ...fields } = request;\n    const requestId = await requestIdOf(body);\n    return {\n      ...fields,\n      body: {\n        content: body,\n        sender_sig: await this.sign(\n          new Uint8Array([...requestDomainSeparator, ...new Uint8Array(requestId)]),\n        ),\n        sender_delegation: this._delegation.delegations,\n        sender_pubkey: this._delegation.publicKey,\n      },\n    };\n  }\n}\n\n/**\n * List of things to check for a delegation chain validity.\n */\nexport interface DelegationValidChecks {\n  /**\n   * Check that the scope is amongst the scopes that this delegation has access to.\n   */\n  scope?: Principal | string | Array<Principal | string>;\n}\n\n/**\n * Analyze a DelegationChain and validate that it's valid, ie. not expired and apply to the\n * scope.\n * @param chain The chain to validate.\n * @param checks Various checks to validate on the chain.\n */\nexport function isDelegationValid(chain: DelegationChain, checks?: DelegationValidChecks): boolean {\n  // Verify that the no delegation is expired. If any are in the chain, returns false.\n  for (const { delegation } of chain.delegations) {\n    // prettier-ignore\n    if (+new Date(Number(delegation.expiration / BigInt(1000000))) <= +Date.now()) {\n      return false;\n    }\n  }\n\n  // Check the scopes.\n  const scopes: Principal[] = [];\n  const maybeScope = checks?.scope;\n  if (maybeScope) {\n    if (Array.isArray(maybeScope)) {\n      scopes.push(...maybeScope.map(s => (typeof s === 'string' ? Principal.fromText(s) : s)));\n    } else {\n      scopes.push(typeof maybeScope === 'string' ? Principal.fromText(maybeScope) : maybeScope);\n    }\n  }\n\n  for (const s of scopes) {\n    const scope = s.toText();\n    for (const { delegation } of chain.delegations) {\n      if (delegation.targets === undefined) {\n        continue;\n      }\n\n      let none = true;\n      for (const target of delegation.targets) {\n        if (target.toText() === scope) {\n          none = false;\n          break;\n        }\n      }\n      if (none) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n",null,"import {\n  DerEncodedPublicKey,\n  PublicKey,\n  Signature,\n  SignIdentity,\n  wrapDER,\n  DER_COSE_OID,\n  fromHex,\n  toHex,\n} from '@dfinity/agent';\nimport borc from 'borc';\nimport { randomBytes } from '@noble/hashes/utils';\n\nfunction _coseToDerEncodedBlob(cose: ArrayBuffer): DerEncodedPublicKey {\n  return wrapDER(cose, DER_COSE_OID).buffer as DerEncodedPublicKey;\n}\n\ntype PublicKeyCredentialWithAttachment = PublicKeyCredential & {\n  // Extends `PublicKeyCredential` with an optional field introduced in the WebAuthn level 3 spec:\n  // https://w3c.github.io/webauthn/#dom-publickeycredential-authenticatorattachment\n  // Already supported by Chrome, Safari and Edge\n  // Note: `null` is included here as a possible value because Edge set this value to null in the\n  // past.\n  authenticatorAttachment: AuthenticatorAttachment | undefined | null;\n};\n\n/**\n * From the documentation;\n * The authData is a byte array described in the spec. Parsing it will involve slicing bytes from\n * the array and converting them into usable objects.\n *\n * See https://webauthn.guide/#registration (subsection \"Example: Parsing the authenticator data\").\n * @param authData The authData field of the attestation response.\n * @returns The COSE key of the authData.\n */\nfunction _authDataToCose(authData: ArrayBuffer): ArrayBuffer {\n  const dataView = new DataView(new ArrayBuffer(2));\n  const idLenBytes = authData.slice(53, 55);\n  [...new Uint8Array(idLenBytes)].forEach((v, i) => dataView.setUint8(i, v));\n  const credentialIdLength = dataView.getUint16(0);\n\n  // Get the public key object.\n  return authData.slice(55 + credentialIdLength);\n}\n\nexport class CosePublicKey implements PublicKey {\n  protected _encodedKey: DerEncodedPublicKey;\n\n  public constructor(protected _cose: ArrayBuffer) {\n    this._encodedKey = _coseToDerEncodedBlob(_cose);\n  }\n\n  public toDer(): DerEncodedPublicKey {\n    return this._encodedKey;\n  }\n\n  public getCose(): ArrayBuffer {\n    return this._cose;\n  }\n}\n\n/**\n * Create a challenge from a string or array. The default challenge is always the same\n * because we don't need to verify the authenticity of the key on the server (we don't\n * register our keys with the IC). Any challenge would do, even one per key, randomly\n * generated.\n * @param challenge The challenge to transform into a byte array. By default a hard\n *        coded string.\n */\nfunction _createChallengeBuffer(challenge: string | Uint8Array = '<ic0.app>'): Uint8Array {\n  if (typeof challenge === 'string') {\n    return Uint8Array.from(challenge, c => c.charCodeAt(0));\n  } else {\n    return challenge;\n  }\n}\n\n/**\n * Create a credentials to authenticate with a server. This is necessary in order in\n * WebAuthn to get credentials IDs (which give us the public key and allow us to\n * sign), but in the case of the Internet Computer, we don't actually need to register\n * it, so we don't.\n * @param credentialCreationOptions an optional CredentialCreationOptions object\n */\nasync function _createCredential(\n  credentialCreationOptions?: CredentialCreationOptions,\n): Promise<PublicKeyCredentialWithAttachment | null> {\n  const creds = (await navigator.credentials.create(\n    credentialCreationOptions ?? {\n      publicKey: {\n        authenticatorSelection: {\n          userVerification: 'preferred',\n        },\n        attestation: 'direct',\n        challenge: _createChallengeBuffer(),\n        pubKeyCredParams: [{ type: 'public-key', alg: PubKeyCoseAlgo.ECDSA_WITH_SHA256 }],\n        rp: {\n          name: 'Internet Identity Service',\n        },\n        user: {\n          id: randomBytes(16),\n          name: 'Internet Identity',\n          displayName: 'Internet Identity',\n        },\n      },\n    },\n  )) as PublicKeyCredentialWithAttachment;\n\n  // Validate that it's the correct type at runtime, since WebAuthn does not HAVE to\n  // reply with a PublicKeyCredential.\n  if (creds.response === undefined || !(creds.rawId instanceof ArrayBuffer)) {\n    return null;\n  } else {\n    return creds;\n  }\n}\n\n// See https://www.iana.org/assignments/cose/cose.xhtml#algorithms for a complete\n// list of these algorithms. We only list the ones we support here.\nenum PubKeyCoseAlgo {\n  ECDSA_WITH_SHA256 = -7,\n}\n\n/**\n * A SignIdentity that uses `navigator.credentials`. See https://webauthn.guide/ for\n * more information about WebAuthentication.\n */\nexport class WebAuthnIdentity extends SignIdentity {\n  /**\n   * Create an identity from a JSON serialization.\n   * @param json - json to parse\n   */\n  public static fromJSON(json: string): WebAuthnIdentity {\n    const { publicKey, rawId } = JSON.parse(json);\n\n    if (typeof publicKey !== 'string' || typeof rawId !== 'string') {\n      throw new Error('Invalid JSON string.');\n    }\n\n    return new this(fromHex(rawId), fromHex(publicKey), undefined);\n  }\n\n  /**\n   * Create an identity.\n   * @param credentialCreationOptions an optional CredentialCreationOptions Challenge\n   */\n  public static async create(\n    credentialCreationOptions?: CredentialCreationOptions,\n  ): Promise<WebAuthnIdentity> {\n    const creds = await _createCredential(credentialCreationOptions);\n\n    if (!creds || creds.type !== 'public-key') {\n      throw new Error('Could not create credentials.');\n    }\n\n    const response = creds.response as AuthenticatorAttestationResponse;\n    if (!(response.attestationObject instanceof ArrayBuffer)) {\n      throw new Error('Was expecting an attestation response.');\n    }\n\n    // Parse the attestationObject as CBOR.\n    const attObject = borc.decodeFirst(new Uint8Array(response.attestationObject));\n\n    return new this(\n      creds.rawId,\n      _authDataToCose(attObject.authData),\n      creds.authenticatorAttachment ?? undefined,\n    );\n  }\n\n  protected _publicKey: CosePublicKey;\n\n  public constructor(\n    public readonly rawId: ArrayBuffer,\n    cose: ArrayBuffer,\n    protected authenticatorAttachment: AuthenticatorAttachment | undefined,\n  ) {\n    super();\n    this._publicKey = new CosePublicKey(cose);\n  }\n\n  public getPublicKey(): PublicKey {\n    return this._publicKey;\n  }\n\n  /**\n   * WebAuthn level 3 spec introduces a new attribute on successful WebAuthn interactions,\n   * see https://w3c.github.io/webauthn/#dom-publickeycredential-authenticatorattachment.\n   * This attribute is already implemented for Chrome, Safari and Edge.\n   *\n   * Given the attribute is only available after a successful interaction, the information is\n   * provided opportunistically and might also be `undefined`.\n   */\n  public getAuthenticatorAttachment(): AuthenticatorAttachment | undefined {\n    return this.authenticatorAttachment;\n  }\n\n  public async sign(blob: ArrayBuffer): Promise<Signature> {\n    const result = (await navigator.credentials.get({\n      publicKey: {\n        allowCredentials: [\n          {\n            type: 'public-key',\n            id: this.rawId,\n          },\n        ],\n        challenge: blob,\n        userVerification: 'preferred',\n      },\n    })) as PublicKeyCredentialWithAttachment;\n\n    if (result.authenticatorAttachment !== null) {\n      this.authenticatorAttachment = result.authenticatorAttachment;\n    }\n\n    const response = result.response as AuthenticatorAssertionResponse;\n    if (\n      response.signature instanceof ArrayBuffer &&\n      response.authenticatorData instanceof ArrayBuffer\n    ) {\n      const cbor = borc.encode(\n        new borc.Tagged(55799, {\n          authenticator_data: new Uint8Array(response.authenticatorData),\n          client_data_json: new TextDecoder().decode(response.clientDataJSON),\n          signature: new Uint8Array(response.signature),\n        }),\n      );\n      if (!cbor) {\n        throw new Error('failed to encode cbor');\n      }\n      return cbor.buffer as Signature;\n    } else {\n      throw new Error('Invalid response from WebAuthn.');\n    }\n  }\n\n  /**\n   * Allow for JSON serialization of all information needed to reuse this identity.\n   */\n  public toJSON(): JsonnableWebAuthnIdentity {\n    return {\n      publicKey: toHex(this._publicKey.getCose()),\n      rawId: toHex(this.rawId),\n    };\n  }\n}\n\n/**\n * ReturnType<WebAuthnIdentity.toJSON>\n */\nexport interface JsonnableWebAuthnIdentity {\n  // The hexadecimal representation of the DER encoded public key.\n  publicKey: string;\n  // The string representation of the local WebAuthn Credential.id (base64url encoded).\n  rawId: string;\n}\n",null,"/** @module IdleManager */\ntype IdleCB = () => unknown;\nexport type IdleManagerOptions = {\n  /**\n   * Callback after the user has gone idle\n   */\n  onIdle?: IdleCB;\n  /**\n   * timeout in ms\n   * @default 30 minutes [600_000]\n   */\n  idleTimeout?: number;\n  /**\n   * capture scroll events\n   * @default false\n   */\n  captureScroll?: boolean;\n  /**\n   * scroll debounce time in ms\n   * @default 100\n   */\n  scrollDebounce?: number;\n};\n\nconst events = ['mousedown', 'mousemove', 'keydown', 'touchstart', 'wheel'];\n\n/**\n * Detects if the user has been idle for a duration of `idleTimeout` ms, and calls `onIdle` and registered callbacks.\n * By default, the IdleManager will log a user out after 10 minutes of inactivity.\n * To override these defaults, you can pass an `onIdle` callback, or configure a custom `idleTimeout` in milliseconds\n */\nexport class IdleManager {\n  callbacks: IdleCB[] = [];\n  idleTimeout: IdleManagerOptions['idleTimeout'] = 10 * 60 * 1000;\n  timeoutID?: number = undefined;\n\n  /**\n   * Creates an {@link IdleManager}\n   * @param {IdleManagerOptions} options Optional configuration\n   * @see {@link IdleManagerOptions}\n   * @param options.onIdle Callback once user has been idle. Use to prompt for fresh login, and use `Actor.agentOf(your_actor).invalidateIdentity()` to protect the user\n   * @param options.idleTimeout timeout in ms\n   * @param options.captureScroll capture scroll events\n   * @param options.scrollDebounce scroll debounce time in ms\n   */\n  public static create(\n    options: {\n      /**\n       * Callback after the user has gone idle\n       * @see {@link IdleCB}\n       */\n      onIdle?: () => unknown;\n      /**\n       * timeout in ms\n       * @default 10 minutes [600_000]\n       */\n      idleTimeout?: number;\n      /**\n       * capture scroll events\n       * @default false\n       */\n      captureScroll?: boolean;\n      /**\n       * scroll debounce time in ms\n       * @default 100\n       */\n      scrollDebounce?: number;\n    } = {},\n  ): IdleManager {\n    return new this(options);\n  }\n\n  /**\n   * @protected\n   * @param options {@link IdleManagerOptions}\n   */\n  protected constructor(options: IdleManagerOptions = {}) {\n    const { onIdle, idleTimeout = 10 * 60 * 1000 } = options || {};\n\n    this.callbacks = onIdle ? [onIdle] : [];\n    this.idleTimeout = idleTimeout;\n\n    const _resetTimer = this._resetTimer.bind(this);\n\n    window.addEventListener('load', _resetTimer, true);\n\n    events.forEach(function (name) {\n      document.addEventListener(name, _resetTimer, true);\n    });\n\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    const debounce = (func: Function, wait: number) => {\n      let timeout: number | undefined;\n      return (...args: unknown[]) => {\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        const context = this;\n        const later = function () {\n          timeout = undefined;\n          func.apply(context, args);\n        };\n        clearTimeout(timeout);\n        timeout = window.setTimeout(later, wait);\n      };\n    };\n\n    if (options?.captureScroll) {\n      // debounce scroll events\n      const scroll = debounce(_resetTimer, options?.scrollDebounce ?? 100);\n      window.addEventListener('scroll', scroll, true);\n    }\n\n    _resetTimer();\n  }\n\n  /**\n   * @param {IdleCB} callback function to be called when user goes idle\n   */\n  public registerCallback(callback: IdleCB): void {\n    this.callbacks.push(callback);\n  }\n\n  /**\n   * Cleans up the idle manager and its listeners\n   */\n  public exit(): void {\n    clearTimeout(this.timeoutID);\n    window.removeEventListener('load', this._resetTimer, true);\n\n    const _resetTimer = this._resetTimer.bind(this);\n    events.forEach(function (name) {\n      document.removeEventListener(name, _resetTimer, true);\n    });\n    this.callbacks.forEach(cb => cb());\n  }\n\n  /**\n   * Resets the timeouts during cleanup\n   */\n  _resetTimer(): void {\n    const exit = this.exit.bind(this);\n    window.clearTimeout(this.timeoutID);\n    this.timeoutID = window.setTimeout(exit, this.idleTimeout);\n  }\n}\n",null,"import { IdbKeyVal } from './db';\n\nexport const KEY_STORAGE_KEY = 'identity';\nexport const KEY_STORAGE_DELEGATION = 'delegation';\nexport const KEY_VECTOR = 'iv';\n// Increment if any fields are modified\nexport const DB_VERSION = 1;\n\nexport const isBrowser = typeof window !== 'undefined';\n\nexport type StoredKey = string | CryptoKeyPair;\n\n/**\n * Interface for persisting user authentication data\n */\nexport interface AuthClientStorage {\n  get(key: string): Promise<StoredKey | null>;\n\n  set(key: string, value: StoredKey): Promise<void>;\n\n  remove(key: string): Promise<void>;\n}\n\n/**\n * Legacy implementation of AuthClientStorage, for use where IndexedDb is not available\n */\nexport class LocalStorage implements AuthClientStorage {\n  constructor(public readonly prefix = 'ic-', private readonly _localStorage?: Storage) {}\n\n  public get(key: string): Promise<string | null> {\n    return Promise.resolve(this._getLocalStorage().getItem(this.prefix + key));\n  }\n\n  public set(key: string, value: string): Promise<void> {\n    this._getLocalStorage().setItem(this.prefix + key, value);\n    return Promise.resolve();\n  }\n\n  public remove(key: string): Promise<void> {\n    this._getLocalStorage().removeItem(this.prefix + key);\n    return Promise.resolve();\n  }\n\n  private _getLocalStorage() {\n    if (this._localStorage) {\n      return this._localStorage;\n    }\n\n    const ls =\n      typeof window === 'undefined'\n        ? typeof global === 'undefined'\n          ? typeof self === 'undefined'\n            ? undefined\n            : self.localStorage\n          : global.localStorage\n        : window.localStorage;\n\n    if (!ls) {\n      throw new Error('Could not find local storage.');\n    }\n\n    return ls;\n  }\n}\n\n/**\n * IdbStorage is an interface for simple storage of string key-value pairs built on {@link IdbKeyVal}\n *\n * It replaces {@link LocalStorage}\n * @see implements {@link AuthClientStorage}\n */\nexport class IdbStorage implements AuthClientStorage {\n  // Initializes a KeyVal on first request\n  private initializedDb: IdbKeyVal | undefined;\n  get _db(): Promise<IdbKeyVal> {\n    return new Promise(resolve => {\n      if (this.initializedDb) {\n        resolve(this.initializedDb);\n        return;\n      }\n      IdbKeyVal.create({ version: DB_VERSION }).then(db => {\n        this.initializedDb = db;\n        resolve(db);\n      });\n    });\n  }\n\n  public async get(key: string): Promise<string | null> {\n    const db = await this._db;\n    return await db.get<string>(key);\n    // return (await db.get<string>(key)) ?? null;\n  }\n\n  public async set(key: string, value: string): Promise<void> {\n    const db = await this._db;\n    await db.set(key, value);\n  }\n\n  public async remove(key: string): Promise<void> {\n    const db = await this._db;\n    await db.remove(key);\n  }\n}\n",null,"import { openDB, IDBPDatabase } from 'idb';\nimport { isBrowser, KEY_STORAGE_DELEGATION, KEY_STORAGE_KEY } from './storage';\n\ntype Database = IDBPDatabase<unknown>;\ntype IDBValidKey = string | number | Date | BufferSource | IDBValidKey[];\nconst AUTH_DB_NAME = 'auth-client-db';\nconst OBJECT_STORE_NAME = 'ic-keyval';\n\nconst _openDbStore = async (\n  dbName = AUTH_DB_NAME,\n  storeName = OBJECT_STORE_NAME,\n  version: number,\n) => {\n  // Clear legacy stored delegations\n  if (isBrowser && localStorage?.getItem(KEY_STORAGE_DELEGATION)) {\n    localStorage.removeItem(KEY_STORAGE_DELEGATION);\n    localStorage.removeItem(KEY_STORAGE_KEY);\n  }\n  return await openDB(dbName, version, {\n    upgrade: database => {\n      database.objectStoreNames;\n      if (database.objectStoreNames.contains(storeName)) {\n        database.clear(storeName);\n      }\n      database.createObjectStore(storeName);\n    },\n  });\n};\n\nasync function _getValue<T>(\n  db: Database,\n  storeName: string,\n  key: IDBValidKey,\n): Promise<T | undefined> {\n  return await db.get(storeName, key);\n}\n\nasync function _setValue<T>(\n  db: Database,\n  storeName: string,\n  key: IDBValidKey,\n  value: T,\n): Promise<IDBValidKey> {\n  return await db.put(storeName, value, key);\n}\n\nasync function _removeValue(db: Database, storeName: string, key: IDBValidKey): Promise<void> {\n  return await db.delete(storeName, key);\n}\n\nexport type DBCreateOptions = {\n  dbName?: string;\n  storeName?: string;\n  version?: number;\n};\n\n/**\n * Simple Key Value store\n * Defaults to `'auth-client-db'` with an object store of `'ic-keyval'`\n */\nexport class IdbKeyVal {\n  /**\n   *\n   * @param {DBCreateOptions} options {@link DbCreateOptions}\n   * @param {DBCreateOptions['dbName']} options.dbName name for the indexeddb database\n   * @default\n   * @param {DBCreateOptions['storeName']} options.storeName name for the indexeddb Data Store\n   * @default\n   * @param {DBCreateOptions['version']} options.version version of the database. Increment to safely upgrade\n   * @constructs an {@link IdbKeyVal}\n   */\n  public static async create(options?: DBCreateOptions): Promise<IdbKeyVal> {\n    const { dbName = AUTH_DB_NAME, storeName = OBJECT_STORE_NAME, version = 1 } = options ?? {};\n    const db = await _openDbStore(dbName, storeName, version);\n    return new IdbKeyVal(db, storeName);\n  }\n\n  // Do not use - instead prefer create\n  private constructor(private _db: Database, private _storeName: string) {}\n\n  /**\n   * Basic setter\n   * @param {IDBValidKey} key string | number | Date | BufferSource | IDBValidKey[]\n   * @param value value to set\n   * @returns void\n   */\n  public async set<T>(key: IDBValidKey, value: T) {\n    return await _setValue<T>(this._db, this._storeName, key, value);\n  }\n  /**\n   * Basic getter\n   * Pass in a type T for type safety if you know the type the value will have if it is found\n   * @param {IDBValidKey} key string | number | Date | BufferSource | IDBValidKey[]\n   * @returns `Promise<T | null>`\n   * @example\n   * await get<string>('exampleKey') -> 'exampleValue'\n   */\n  public async get<T>(key: IDBValidKey): Promise<T | null> {\n    return (await _getValue<T>(this._db, this._storeName, key)) ?? null;\n  }\n\n  /**\n   * Remove a key\n   * @param key {@link IDBValidKey}\n   * @returns void\n   */\n  public async remove(key: IDBValidKey) {\n    return await _removeValue(this._db, this._storeName, key);\n  }\n}\n","import { w as wrap, r as replaceTraps } from './wrap-idb-value.js';\nexport { u as unwrap, w as wrap } from './wrap-idb-value.js';\n\n/**\n * Open a database.\n *\n * @param name Name of the database.\n * @param version Schema version.\n * @param callbacks Additional callbacks.\n */\nfunction openDB(name, version, { blocked, upgrade, blocking, terminated } = {}) {\n    const request = indexedDB.open(name, version);\n    const openPromise = wrap(request);\n    if (upgrade) {\n        request.addEventListener('upgradeneeded', (event) => {\n            upgrade(wrap(request.result), event.oldVersion, event.newVersion, wrap(request.transaction), event);\n        });\n    }\n    if (blocked) {\n        request.addEventListener('blocked', (event) => blocked(\n        // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event.newVersion, event));\n    }\n    openPromise\n        .then((db) => {\n        if (terminated)\n            db.addEventListener('close', () => terminated());\n        if (blocking) {\n            db.addEventListener('versionchange', (event) => blocking(event.oldVersion, event.newVersion, event));\n        }\n    })\n        .catch(() => { });\n    return openPromise;\n}\n/**\n * Delete a database.\n *\n * @param name Name of the database.\n */\nfunction deleteDB(name, { blocked } = {}) {\n    const request = indexedDB.deleteDatabase(name);\n    if (blocked) {\n        request.addEventListener('blocked', (event) => blocked(\n        // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event));\n    }\n    return wrap(request).then(() => undefined);\n}\n\nconst readMethods = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'];\nconst writeMethods = ['put', 'add', 'delete', 'clear'];\nconst cachedMethods = new Map();\nfunction getMethod(target, prop) {\n    if (!(target instanceof IDBDatabase &&\n        !(prop in target) &&\n        typeof prop === 'string')) {\n        return;\n    }\n    if (cachedMethods.get(prop))\n        return cachedMethods.get(prop);\n    const targetFuncName = prop.replace(/FromIndex$/, '');\n    const useIndex = prop !== targetFuncName;\n    const isWrite = writeMethods.includes(targetFuncName);\n    if (\n    // Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.\n    !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) ||\n        !(isWrite || readMethods.includes(targetFuncName))) {\n        return;\n    }\n    const method = async function (storeName, ...args) {\n        // isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(\n        const tx = this.transaction(storeName, isWrite ? 'readwrite' : 'readonly');\n        let target = tx.store;\n        if (useIndex)\n            target = target.index(args.shift());\n        // Must reject if op rejects.\n        // If it's a write operation, must reject if tx.done rejects.\n        // Must reject with op rejection first.\n        // Must resolve with op value.\n        // Must handle both promises (no unhandled rejections)\n        return (await Promise.all([\n            target[targetFuncName](...args),\n            isWrite && tx.done,\n        ]))[0];\n    };\n    cachedMethods.set(prop, method);\n    return method;\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get: (target, prop, receiver) => getMethod(target, prop) || oldTraps.get(target, prop, receiver),\n    has: (target, prop) => !!getMethod(target, prop) || oldTraps.has(target, prop),\n}));\n\nexport { deleteDB, openDB };\n","const instanceOfAny = (object, constructors) => constructors.some((c) => object instanceof c);\n\nlet idbProxyableTypes;\nlet cursorAdvanceMethods;\n// This is a function to prevent it throwing up in node environments.\nfunction getIdbProxyableTypes() {\n    return (idbProxyableTypes ||\n        (idbProxyableTypes = [\n            IDBDatabase,\n            IDBObjectStore,\n            IDBIndex,\n            IDBCursor,\n            IDBTransaction,\n        ]));\n}\n// This is a function to prevent it throwing up in node environments.\nfunction getCursorAdvanceMethods() {\n    return (cursorAdvanceMethods ||\n        (cursorAdvanceMethods = [\n            IDBCursor.prototype.advance,\n            IDBCursor.prototype.continue,\n            IDBCursor.prototype.continuePrimaryKey,\n        ]));\n}\nconst cursorRequestMap = new WeakMap();\nconst transactionDoneMap = new WeakMap();\nconst transactionStoreNamesMap = new WeakMap();\nconst transformCache = new WeakMap();\nconst reverseTransformCache = new WeakMap();\nfunction promisifyRequest(request) {\n    const promise = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            request.removeEventListener('success', success);\n            request.removeEventListener('error', error);\n        };\n        const success = () => {\n            resolve(wrap(request.result));\n            unlisten();\n        };\n        const error = () => {\n            reject(request.error);\n            unlisten();\n        };\n        request.addEventListener('success', success);\n        request.addEventListener('error', error);\n    });\n    promise\n        .then((value) => {\n        // Since cursoring reuses the IDBRequest (*sigh*), we cache it for later retrieval\n        // (see wrapFunction).\n        if (value instanceof IDBCursor) {\n            cursorRequestMap.set(value, request);\n        }\n        // Catching to avoid \"Uncaught Promise exceptions\"\n    })\n        .catch(() => { });\n    // This mapping exists in reverseTransformCache but doesn't doesn't exist in transformCache. This\n    // is because we create many promises from a single IDBRequest.\n    reverseTransformCache.set(promise, request);\n    return promise;\n}\nfunction cacheDonePromiseForTransaction(tx) {\n    // Early bail if we've already created a done promise for this transaction.\n    if (transactionDoneMap.has(tx))\n        return;\n    const done = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            tx.removeEventListener('complete', complete);\n            tx.removeEventListener('error', error);\n            tx.removeEventListener('abort', error);\n        };\n        const complete = () => {\n            resolve();\n            unlisten();\n        };\n        const error = () => {\n            reject(tx.error || new DOMException('AbortError', 'AbortError'));\n            unlisten();\n        };\n        tx.addEventListener('complete', complete);\n        tx.addEventListener('error', error);\n        tx.addEventListener('abort', error);\n    });\n    // Cache it for later retrieval.\n    transactionDoneMap.set(tx, done);\n}\nlet idbProxyTraps = {\n    get(target, prop, receiver) {\n        if (target instanceof IDBTransaction) {\n            // Special handling for transaction.done.\n            if (prop === 'done')\n                return transactionDoneMap.get(target);\n            // Polyfill for objectStoreNames because of Edge.\n            if (prop === 'objectStoreNames') {\n                return target.objectStoreNames || transactionStoreNamesMap.get(target);\n            }\n            // Make tx.store return the only store in the transaction, or undefined if there are many.\n            if (prop === 'store') {\n                return receiver.objectStoreNames[1]\n                    ? undefined\n                    : receiver.objectStore(receiver.objectStoreNames[0]);\n            }\n        }\n        // Else transform whatever we get back.\n        return wrap(target[prop]);\n    },\n    set(target, prop, value) {\n        target[prop] = value;\n        return true;\n    },\n    has(target, prop) {\n        if (target instanceof IDBTransaction &&\n            (prop === 'done' || prop === 'store')) {\n            return true;\n        }\n        return prop in target;\n    },\n};\nfunction replaceTraps(callback) {\n    idbProxyTraps = callback(idbProxyTraps);\n}\nfunction wrapFunction(func) {\n    // Due to expected object equality (which is enforced by the caching in `wrap`), we\n    // only create one new func per func.\n    // Edge doesn't support objectStoreNames (booo), so we polyfill it here.\n    if (func === IDBDatabase.prototype.transaction &&\n        !('objectStoreNames' in IDBTransaction.prototype)) {\n        return function (storeNames, ...args) {\n            const tx = func.call(unwrap(this), storeNames, ...args);\n            transactionStoreNamesMap.set(tx, storeNames.sort ? storeNames.sort() : [storeNames]);\n            return wrap(tx);\n        };\n    }\n    // Cursor methods are special, as the behaviour is a little more different to standard IDB. In\n    // IDB, you advance the cursor and wait for a new 'success' on the IDBRequest that gave you the\n    // cursor. It's kinda like a promise that can resolve with many values. That doesn't make sense\n    // with real promises, so each advance methods returns a new promise for the cursor object, or\n    // undefined if the end of the cursor has been reached.\n    if (getCursorAdvanceMethods().includes(func)) {\n        return function (...args) {\n            // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n            // the original object.\n            func.apply(unwrap(this), args);\n            return wrap(cursorRequestMap.get(this));\n        };\n    }\n    return function (...args) {\n        // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n        // the original object.\n        return wrap(func.apply(unwrap(this), args));\n    };\n}\nfunction transformCachableValue(value) {\n    if (typeof value === 'function')\n        return wrapFunction(value);\n    // This doesn't return, it just creates a 'done' promise for the transaction,\n    // which is later returned for transaction.done (see idbObjectHandler).\n    if (value instanceof IDBTransaction)\n        cacheDonePromiseForTransaction(value);\n    if (instanceOfAny(value, getIdbProxyableTypes()))\n        return new Proxy(value, idbProxyTraps);\n    // Return the same value back if we're not going to transform it.\n    return value;\n}\nfunction wrap(value) {\n    // We sometimes generate multiple promises from a single IDBRequest (eg when cursoring), because\n    // IDB is weird and a single IDBRequest can yield many responses, so these can't be cached.\n    if (value instanceof IDBRequest)\n        return promisifyRequest(value);\n    // If we've already transformed this value before, reuse the transformed value.\n    // This is faster, but it also provides object equality.\n    if (transformCache.has(value))\n        return transformCache.get(value);\n    const newValue = transformCachableValue(value);\n    // Not all types are transformed.\n    // These may be primitive types, so they can't be WeakMap keys.\n    if (newValue !== value) {\n        transformCache.set(value, newValue);\n        reverseTransformCache.set(newValue, value);\n    }\n    return newValue;\n}\nconst unwrap = (value) => reverseTransformCache.get(value);\n\nexport { reverseTransformCache as a, instanceOfAny as i, replaceTraps as r, unwrap as u, wrap as w };\n"],"names":[],"version":3,"file":"login.21fa24d9.js.map","sourceRoot":"/__parcel_source_root/"}